// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScopicTestTask.Data;

namespace ScopicTestTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201116023038_Added BidAmount Collumn To BidHistory Table")]
    partial class AddedBidAmountCollumnToBidHistoryTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ScopicTestTask.Models.Antique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric(13,0)");

                    b.Property<DateTime>("BidEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BidStartTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentBid")
                        .HasColumnType("numeric(13,0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("varchar(65)");

                    b.HasKey("Id");

                    b.ToTable("Antique");
                });

            modelBuilder.Entity("ScopicTestTask.Models.BidHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AntiqueId")
                        .HasColumnType("int");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("numeric(13,0)");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AntiqueId");

                    b.ToTable("BidHistory");
                });

            modelBuilder.Entity("ScopicTestTask.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AntiqueId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("AntiqueId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("ScopicTestTask.Models.BidHistory", b =>
                {
                    b.HasOne("ScopicTestTask.Models.Antique", "Antique")
                        .WithMany("BidHistories")
                        .HasForeignKey("AntiqueId")
                        .HasConstraintName("FK__BidHistor__Antiq__29572725")
                        .IsRequired();

                    b.Navigation("Antique");
                });

            modelBuilder.Entity("ScopicTestTask.Models.Photo", b =>
                {
                    b.HasOne("ScopicTestTask.Models.Antique", "Antique")
                        .WithMany("Photos")
                        .HasForeignKey("AntiqueId")
                        .HasConstraintName("FK__Photo__AntiqueId__267ABA7A")
                        .IsRequired();

                    b.Navigation("Antique");
                });

            modelBuilder.Entity("ScopicTestTask.Models.Antique", b =>
                {
                    b.Navigation("BidHistories");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
